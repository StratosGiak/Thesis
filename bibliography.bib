@misc{jsMozilla,
  author       = {Mozilla},
  title        = {JavaScript - MDN Web Docs},
  howpublished = {\url{https://developer.mozilla.org/en-US/docs/Web/JavaScript}}
}

@misc{tsMozilla,
  author       = {Mozilla},
  title        = {JavaScript - MDN Web Docs},
  howpublished = {\url{https://developer.mozilla.org/en-US/docs/Glossary/TypeScript}}
}

@misc{statsJS,
  author       = {W3Techs},
  title        = {Usage statistics of client-side programming languages for websites},
  howpublished = {\url{https://w3techs.com/technologies/overview/client_side_language}}
}

@misc{netflix,
  author       = {Kristofer Baxter},
  title        = {Making Netflix.com Faster},
  howpublished = {\url{https://netflixtechblog.com/making-netflix-com-faster-f95d15f2e972}}
}

@misc{paypal,
  author       = {PayPal Tech Blog Team},
  title        = {Node.js at PayPal},
  howpublished = {\url{https://medium.com/paypal-tech/node-js-at-paypal-4e2d1d08ce4f}}
}

@misc{linkedIn,
  author       = {Octav Druta},
  title        = {Building With Node.js At LinkedIn},
  howpublished = {\url{https://medium.com/building-with-x/building-with-node-js-at-linkedin-ae4ea6af12f2}}
}

@misc{nasa,
  author       = {OpenJS Foundation},
  title        = {Node.js Helps NASA Keep Astronauts Safe and Data Accessible},
  howpublished = {\url{https://web.archive.org/web/20231127154528/https://openjsf.org/wp-content/uploads/sites/84/2020/02/Case_Study-Node.js-NASA.pdf}}
}

@misc{bloomberg,
  author       = {Daniel Ehrenberg},
  title        = {Bloomberg Invests in Node.js. Shouldn’t You?},
  howpublished = {\url{https://www.nearform.com/insights/bloomberg-invests-in-node-js-shouldnt-you/}}
}

@misc{uberNode,
  author       = {OpenJS Foundation},
  title        = {How Uber Uses Node.js to Scale Their Business},
  howpublished = {\url{https://web.archive.org/web/20170225065423/https://nodejs.org/static/documents/casestudies/Nodejs-at-Uber.pdf}}
}

@software{Yung_Open-NSFW_2_2023,
  author       = {Yung, Bosco},
  license      = {MIT},
  month        = dec,
  title        = {{Open-NSFW 2}},
  howpublished = {\url{https://github.com/bhky/opennsfw2}},
  version      = {0.13.7},
  year         = {2023}
}

@misc{Mahadeokar_Pesavento_2016,
  title        = {Open Sourcing a Deep Learning Solution for Detecting NSFW Images --- {yahoo! Engineering}},
  howpublished = {\url{https://yahooeng.tumblr.com/post/151148689421/open-sourcing-a-deep-learning-solution-for}},
  author       = {Mahadeokar, Jay and Pesavento, Gerry},
  year         = {2016},
  month        = sep
}

@misc{okta_code_flow,
  author       = {Okta},
  title        = {OAuth 2.0 and OpenID Connect overview},
  howpublished = {\url{https://developer.okta.com/docs/concepts/oauth-openid/\#authorization-code-flow-with-pkce-flow}}
}

@misc{rfc8252,
  series       = {Request for Comments},
  number       = 8252,
  howpublished = {RFC 8252},
  publisher    = {RFC Editor},
  doi          = {10.17487/RFC8252},
  url          = {https://www.rfc-editor.org/info/rfc8252},
  author       = {William Denniss and John Bradley},
  title        = {{OAuth 2.0 for Native Apps}},
  pagetotal    = 21,
  year         = 2017,
  month        = oct,
  abstract     = {OAuth 2.0 authorization requests from native apps should only be made through external user-agents, primarily the user's browser. This specification details the security and usability reasons why this is the case and how native apps and authorization servers can implement this best practice.}
}

@misc{OIDC_specs,
  howpublished = {\url{https://openid.net/specs/openid-connect-core-1_0.html}},
  author       = {N. Sakimura, J. Bradley, M. Jones, B. de Medeiros, C. Mortimore},
  title        = {{OpenID Connect Core 1.0 incorporating errata set 2}},
  year         = 2023,
  month        = dec,
  abstract     = {
                  OpenID Connect 1.0 is a simple identity layer on top of the OAuth 2.0 protocol. It enables Clients to verify the identity of the End-User based on the authentication performed by an Authorization Server, as well as to obtain basic profile information about the End-User in an interoperable and REST-like manner.
                  
                  This specification defines the core OpenID Connect functionality: authentication built on top of OAuth 2.0 and the use of Claims to communicate information about the End-User. It also describes the security and privacy considerations for using OpenID Connect. }
}

@misc{oauth_net,
  author       = {Justin Richer},
  title        = {User Authentication with OAuth 2.0},
  howpublished = {\url{https://oauth.net/articles/authentication}}
}

@misc{oidc_faq,
  author       = {OpenID Foundation},
  title        = {How OpenID Connect Works},
  howpublished = {\url{https://openid.net/developers/how-connect-works}}
}

@misc{node_docs_eventloop,
  author       = {OpenJS Foundation},
  title        = {Don't Block the Event Loop},
  howpublished = {\url{https://nodejs.org/en/learn/asynchronous-work/dont-block-the-event-loop}}
}

@misc{node_architecture_diagram,
  howpublished = {\url{https://x.com/RichOnTheWeb/status/494959181871316992}}
}

@misc{node_eventloop_diagram,
  howpublished = {\url{https://aaronstannard.com/intro-to-nodejs-for-net-developers/}}
}

@misc{rfc6455,
  series       = {Request for Comments},
  number       = 6455,
  howpublished = {RFC 6455},
  publisher    = {RFC Editor},
  doi          = {10.17487/RFC6455},
  url          = {https://www.rfc-editor.org/info/rfc6455},
  author       = {Alexey Melnikov and Ian Fette},
  title        = {{The WebSocket Protocol}},
  pagetotal    = 71,
  year         = 2011,
  month        = dec,
  abstract     = {The WebSocket Protocol enables two-way communication between a client running untrusted code in a controlled environment to a remote host that has opted-in to communications from that code. The security model used for this is the origin-based security model commonly used by web browsers. The protocol consists of an opening handshake followed by basic message framing, layered over TCP. The goal of this technology is to provide a mechanism for browser-based applications that need two-way communication with servers that does not rely on opening multiple HTTP connections (e.g., using XMLHttpRequest or \textless{}iframe\textgreater{}s and long polling). {[}STANDARDS-TRACK{]}}
}

@misc{mvc_fowler,
  author = {Martin Fowler},
  howpublished = {\url{https://martinfowler.com/eaaDev/uiArchs.html}},
  title = {GUI Architectures},
  year = {2006}
}

@misc{flutter_architecture,
  author       = {Tim Sneath \& contributors},
  howpublished = {\url{https://docs.flutter.dev/resources/architectural-overview}},
  title        = {Flutter architectural overview},
}

@misc{flutter_inside,
  author       = {Shams Zakhour},
  howpublished = {\url{https://docs.flutter.dev/resources/inside-flutter}},
  title        = {Inside Flutter}
}

@misc{flutter_provider,
  author       = {Rémi Rousselet},
  howpublished = {\url{https://pub.dev/packages/provider}},
  title        = {provider}
}

@misc{flutter_presentation,
  author       = {Rémi Rousselet},
  howpublished = {\url{https://www.youtube.com/watch?v=PnIWl33YMwA}},
  title        = {Sky: An Experiment Writing Dart for Mobile (Dart Developer Summit 2015)}
}

@misc{flutter_state,
  author       = {Filip Hracek \& contributors},
  howpublished = {\url{https://docs.flutter.dev/data-and-backend/state-mgmt/simple}},
  title        = {Simple app state management}
}

@misc{server_code,
  author       = {Efstratios Giakoumakis},
  howpublished = {\url{https://github.com/StratosGiak/NTUA-Ridehailing-Server}},
  title        = {Code for NTUA Ridehailing server}
}

@misc{app_code,
  author       = {Efstratios Giakoumakis},
  howpublished = {\url{https://github.com/StratosGiak/NTUA-Ridehailing-App}},
  title        = {Code for NTUA Ridehailing mobile app}
}

@misc{ecmascript,
  author       = {{ECMA International}},
  edition      = {15th},
  month        = jun,
  year         = 2024,
  title        = {Standard ECMA-262 - ECMAScript® 2024 Language Specification},
  howpublished = {\url{https://ecma-international.org/wp-content/uploads/ECMA-262_15th_edition_june_2024.pdf}},
}

@misc{mvc_mdn,
  author       = {Mozilla},
  title        = {MVC - MDN Web Docs},
  howpublished = {\url{https://developer.mozilla.org/en-US/docs/Glossary/MVC}}
}

@article{10.1145/3386327,
  author     = {Wirfs-Brock, Allen and Eich, Brendan},
  title      = {JavaScript: the first 20 years},
  year       = {2020},
  issue_date = {June 2020},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {4},
  number     = {HOPL},
  url        = {https://doi.org/10.1145/3386327},
  doi        = {10.1145/3386327},
  abstract   = {How a sidekick scripting language for Java, created at Netscape in a ten-day hack, ships first as a de facto Web standard and eventually becomes the world's most widely used programming language. This paper tells the story of the creation, design, evolution, and standardization of the JavaScript language over the period of 1995--2015. But the story is not only about the technical details of the language. It is also the story of how people and organizations competed and collaborated to shape the JavaScript language which dominates the Web of 2020.},
  journal    = {Proc. ACM Program. Lang.},
  month      = jun,
  articleno  = {77},
  numpages   = {189},
  keywords   = {Web browsers, Standards, JavaScript, History of programming languages, ECMAScript, Browser game theory}
}

@misc{node_slides,
  author       = {Ryan Dahl},
  title        = {Node.js presentation slides},
  howpublished = {\url{https://s3.amazonaws.com/four.livejournal/20091117/jsconf.pdf}}
}

@misc{node_presentation,
  author       = {Ryan Dahl},
  title        = {Node.js presentation},
  howpublished = {\url{https://www.youtube.com/watch?v=EeYvFl7li9E}}
}

@article{SHAHEEN2016165,
  title    = {Casual carpooling in the San Francisco Bay Area: Understanding user characteristics, behaviors, and motivations},
  journal  = {Transport Policy},
  volume   = {51},
  pages    = {165-173},
  year     = {2016},
  note     = {Transit Investment and Land Development. Edited by Xinyu (Jason) Cao and Qisheng Pan \&Shared Use Mobility Innovations. Edited by Susan Shaheen},
  issn     = {0967-070X},
  doi      = {https://doi.org/10.1016/j.tranpol.2016.01.003},
  url      = {https://www.sciencedirect.com/science/article/pii/S0967070X16300038},
  author   = {Susan A. Shaheen and Nelson D. Chan and Teresa Gaynor},
  keywords = {Casual carpooling, Slugging, Ridesharing, Sharing economy, Mode choice modeling, Sociodemographics, User characteristics},
  abstract = {Casual carpooling is an informal form of commuter ridesharing operating in Washington, D.C.; Houston, Texas; and San Francisco, California. In contrast to new forms of shared-use mobility, casual carpooling has been in existence for over 30 years and uses no information communication technology, and is entirely run informally by its users. Researchers have been fascinated by this phenomenon and have conducted studies in the past, but there remains a lack of up-to-date quantitative data. This study examines the motivations and behaviors of casual carpoolers in the San Francisco Bay Area to understand user characteristics and motivations. In Winter 2014, the authors observed and counted participants and vehicles at four casual carpooling locations, interviewed participants riding in carpooling vehicles (N=16), and conducted intercept surveys (N=503) at 10 East Bay pickup locations. The results indicate that the motivations for casual carpooling participation include convenience, time savings, and monetary savings, while environmental and community-based motivations ranked low. Casual carpooling is an efficient transportation option for these commuters, while environmental sustainability benefits are a positive byproduct. Seventy-five percent of casual carpool users were previously public transit riders, and over 10\% formerly drove alone. Logit modeling found that casual carpool role (i.e., always a rider or sometimes a driver), age, and employment status were key drivers in modal choice. Further research on a larger scale is needed to identify the elements needed for system replication in different areas.}
}

